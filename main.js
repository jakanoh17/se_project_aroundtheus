!function(){"use strict";class e{constructor(e,t,s,i,r){this.data=e,this.cardSelector=t,this._handleImageClick=s,this._handleTrashClick=i,this._handleLikeClick=r,this._element=document.querySelector(this.cardSelector).content.querySelector(".gallery__card").cloneNode(!0),this._location=this._element.querySelector(".gallery__location"),this._image=this._element.querySelector(".gallery__image"),this._likeButton=this._element.querySelector(".gallery__like-button"),this._trashButton=this._element.querySelector(".gallery__trash-icon")}_setEventListeners(){this._trashButton.addEventListener("click",this._handleTrashClick),this._image.addEventListener("click",this._handleImageClick),this._likeButton.addEventListener("click",(e=>{this._selectLikeButton(e)}))}_selectLikeButton(e){this._likeButton.classList.toggle("gallery__like-button_selected"),this._likeButton.classList.contains("gallery__like-button_selected")?this._handleLikeClick(e,"PUT"):this._handleLikeClick(e,"DELETE")}render(){return this._location.textContent=this.data.name,this._image.setAttribute("alt",this.data.name),this._image.setAttribute("src",this.data.link),this._element.id=this.data._id,this._setEventListeners(),this.data.isLiked&&this._likeButton.classList.add("gallery__like-button_selected"),this._element}}const t=document.querySelector(".profile__edit-button"),s=document.forms["edit-form"],i=document.forms["edit-avi-form"],r=document.querySelector(".profile__add-button"),n=document.querySelector(".profile__avatar-container"),o=document.querySelector(".modal_type_new-card"),a=document.forms["new-card-form"],l=(o.querySelector(".modal__input_type_card-title"),o.querySelector(".modal__input_type_card-link"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_inactive",inputErrorClass:"modal__input_invalid",errorClass:"modal__error-message_visible"}),c=document.querySelector(".modal__input_type_name"),d=document.querySelector(".modal__input_type_description"),u=document.querySelector(".profile__name"),_=document.querySelector(".profile__title"),h={authorization:"1e41f1e9-9859-4a6e-b008-27b738619ee0","Content-Type":"application/json"};class m{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._element=this._renderer(e),this._addItem(this._element)}))}_addItem(){this._container.append(this._element)}}class p{constructor(e){this.popup=document.querySelector(e),this._closeButton=this.popup.querySelector(".modal__close-button"),this._boundCloseHandler=this.close.bind(this),this._boundOutsideClickHandler=this._handleOutsideClick.bind(this),this._boundEscHandler=this._handleEscClose.bind(this)}open(){this.popup.classList.add("modal_opened"),this.popup.addEventListener("click",this._boundOutsideClickHandler),document.addEventListener("keydown",this._boundEscHandler),this._closeButton.addEventListener("click",this._boundCloseHandler)}close(){this.popup.classList.remove("modal_opened"),this.popup.removeEventListener("click",this._boundOutsideClickHandler),document.removeEventListener("keydown",this._boundEscHandler),this._closeButton.removeEventListener("click",this._boundCloseHandler)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOutsideClick(e){e.target===this.popup&&this.close()}}class g extends p{constructor(e,t){super(e),this._handleSubmit=t.bind(this)}_getInputValues(){const e=[...this.popup.querySelectorAll("input")],t={};for(const s of e)t[s.name]=s.value;return t}open(){super.open(),this.popup.addEventListener("submit",(e=>{this._handleSubmit(this._getInputValues())}))}}class y{constructor(e,t){this.settings=e,this.form=t,this._submitButton=t.querySelector(this.settings.submitButtonSelector),this._inputList=this.form.querySelectorAll(this.settings.inputSelector)}_findInvalidInputs(){return Array.from(this.form.querySelectorAll(this.settings.inputSelector)).some((e=>!e.validity.valid))}_toggleSubmitButton(e){"disable"===e||this._findInvalidInputs()?(this._submitButton.setAttribute("disabled",!0),this._submitButton.classList.add(this.settings.inactiveButtonClass)):(this._submitButton.removeAttribute("disabled"),this._submitButton.classList.remove(this.settings.inactiveButtonClass))}_toggleInputError(e){e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e)}_showErrorMessage(e){const t=e.validationMessage,s=this.form.querySelector(`.${e.id}-err-msg`);s.textContent=t,s.classList.add(this.settings.errorClass),e.classList.add(this.settings.inputErrorClass)}_hideErrorMessage(e){this.form.querySelector(`.${e.id}-err-msg`).classList.remove(this.settings.errorClass),e.classList.remove(this.settings.inputErrorClass)}enableValidation(){this._inputList.forEach((e=>{e.addEventListener("input",(e=>{this._toggleInputError(e.target),this._toggleSubmitButton()}))}))}resetValidation(){this._toggleSubmitButton("disable"),this._inputList.forEach((e=>{this._hideErrorMessage(e)}))}}class v{constructor(e){this.options=e}_definePromise(e){return fetch(e,this.options).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>console.error(e)))}getUserInfo(){return this._definePromise("https://around-api.en.tripleten-services.com/v1/users/me")}getInitialCards(){return this._definePromise("https://around-api.en.tripleten-services.com/v1/cards")}deleteCardInfo(e){return this._definePromise(`https://around-api.en.tripleten-services.com/v1/cards/${e}`)}toggleLikeCard(e){return this._definePromise(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`)}editAvatar(){return this._definePromise("https://around-api.en.tripleten-services.com/v1/users/me/avatar")}}const b=new y(l,a),S=new y(l,s),f=new y(l,i),C=new class extends p{constructor(e){super(e),this._enlrgImg=this.popup.querySelector(".modal__enlarged-image"),this._enlrgImgCap=this.popup.querySelector(".modal__caption")}open(e){super.open(),this._enlrgImg.src=e.target.src,this._enlrgImg.alt=e.target.alt,this._enlrgImgCap.textContent=e.target.alt}}(".modal_type_enlarged-card"),k=new g(".modal_type_new-card",(function(e){let{name:t,link:s}=e;const i=new v({method:"POST",headers:h,body:JSON.stringify({name:t,link:s})});k.popup.querySelector(".modal__submit-button").textContent="Creating...",i.getInitialCards().then((e=>{new m({items:e,renderer:x},".gallery").renderItems()})).catch((e=>console.error(e))).finally((()=>{k.popup.querySelector(".modal__submit-button").textContent="Create",k.close(),a.reset(),b.resetValidation()}))})),E=new g(".modal_type_profile",(function(e){let{name:t,description:s}=e;const i=new v({method:"PATCH",headers:h,body:JSON.stringify({name:t,about:s})});E.popup.querySelector(".modal__submit-button").textContent="Saving...",i.getUserInfo().catch((e=>{console.error(`Error: ${e}`)})).finally((()=>{E.popup.querySelector(".modal__submit-button").textContent="Save",E.close()}))})),L=new g(".modal_type_delete-card",(function(e){let{cardId:t}=e;L.close(),B.deleteCardInfo(t).catch((e=>{console.error(e)}))})),q=new g(".modal_type_edit-avi",(function(e){const t=new v({method:"PATCH",headers:h,body:JSON.stringify(e)});q.popup.querySelector(".modal__submit-button").textContent="Saving...",t.editAvatar().then((e=>{I.setAvatar(e)})).catch((e=>{console.error(e)})).finally((()=>{q.popup.querySelector(".modal__submit-button").textContent="Save",i.reset(),q.close()}))})),I=new class{constructor(e){let{userNameSelec:t,descrSelec:s,aviSelec:i}=e;this.userName=document.querySelector(t),this.descr=document.querySelector(s),this.avatar=document.querySelector(i)}setUserInfo(e){let{name:t,description:s,avatar:i}=e;this.userName.textContent=t,this.descr.textContent=s,this.avatar.src=i}}({userNameSelec:".profile__name",descrSelec:".profile__title",aviSelec:".profile__avatar"}),w=new v({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:h}),B=new v({method:"DELETE",headers:h});function x(t){return new e(t,"#card-template",A,H,P).render()}function A(e){C.open(e)}function H(e){L.open(),L.popup.querySelector("input").value=e.target.closest(".gallery__card").id}function P(e,t){new v({method:t,headers:h}).toggleLikeCard(e.target.closest(".gallery__card").id)}w.getUserInfo().then((e=>{const{name:t,about:s,avatar:i}=e;I.setUserInfo({name:t,description:s,avatar:i})})).catch((e=>console.error(e))),w.getInitialCards().then((e=>{new m({items:e,renderer:x},".gallery").renderItems()})).catch((e=>console.error(e))),r.addEventListener("click",(()=>{k.open()})),t.addEventListener("click",(function(){E.open(),c.value=u.textContent,d.value=_.textContent,S.resetValidation()})),n.addEventListener("click",(()=>{q.open(),f.resetValidation()})),b.enableValidation(),S.enableValidation(),f.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,